import{_ as e,o as l,c as i,e as d}from"./app-6071e133.js";const a={},c=d('<h1 id="数学工具" tabindex="-1"><a class="header-anchor" href="#数学工具" aria-hidden="true">#</a> 数学工具</h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>本功能实现了 数学相关 功能</p><h2 id="指令" tabindex="-1"><a class="header-anchor" href="#指令" aria-hidden="true">#</a> 指令</h2><h3 id="化简" tabindex="-1"><a class="header-anchor" href="#化简" aria-hidden="true">#</a> 化简</h3><ul><li><p>指令： <code>化简[式子]</code></p></li><li><p>参数：</p><ul><li><code>式子</code>： 多项式</li></ul></li><li><p>详情：</p><p>化简多项式</p></li></ul><h3 id="数字分解" tabindex="-1"><a class="header-anchor" href="#数字分解" aria-hidden="true">#</a> 数字分解</h3><ul><li><p>指令： <code>数字分解[自然数]</code></p></li><li><p>参数：</p><ul><li><code>自然数</code>： 要分解的数，需要是自然数，即非负整数</li></ul></li><li><p>详情：</p><p>分解质因数</p></li></ul><h3 id="xxx是不是质数" tabindex="-1"><a class="header-anchor" href="#xxx是不是质数" aria-hidden="true">#</a> xxx是不是质数</h3><ul><li><p>指令： <code>[数字]是不是质数</code></p></li><li><p>参数：</p><ul><li><code>数字</code>： 需要是自然数，即非负整数</li></ul></li><li><p>详情：</p><p>检查质数</p></li></ul><h3 id="xxx的上-下一个质数" tabindex="-1"><a class="header-anchor" href="#xxx的上-下一个质数" aria-hidden="true">#</a> xxx的上\\下一个质数</h3><ul><li><p>指令： <code>[数字]的上\\下一个质数</code></p></li><li><p>参数：</p><ul><li><code>[数字]</code>： 需要是自然数，即非负整数</li></ul></li><li><p>详情：</p><p>查找质数</p></li></ul><h3 id="因式分解" tabindex="-1"><a class="header-anchor" href="#因式分解" aria-hidden="true">#</a> 因式分解</h3><ul><li><p>指令： <code>因式分解[式子]</code></p></li><li><p>参数：</p><ul><li><code>式子</code>： 要分解的式子</li></ul></li><li><p>详情：</p><p>分解因式</p></li></ul><h3 id="数字性质" tabindex="-1"><a class="header-anchor" href="#数字性质" aria-hidden="true">#</a> 数字性质</h3><ul><li><p>指令： <code>数字性质[数字]</code></p></li><li><p>参数：</p><ul><li><code>数字</code>： 要查询性质的数字</li></ul></li><li><p>详情：</p><p>查询数字性质</p></li></ul><h3 id="解方程" tabindex="-1"><a class="header-anchor" href="#解方程" aria-hidden="true">#</a> 解方程</h3><ul><li><p>指令： <code>解方程[方程] (变量)</code></p></li><li><p>参数：</p><ul><li><code>方程</code>： 要解的方程，各方程间用 <code>,</code> 隔开</li><li><code>变量</code>： 可选参数，默认 <code>x</code>，各变量间 <code>,</code> 隔开</li></ul></li><li><p>详情：</p><p>解方程，支持多变量多方程，方程个数需与变量个数相等</p></li></ul><h3 id="化数解方程" tabindex="-1"><a class="header-anchor" href="#化数解方程" aria-hidden="true">#</a> 化数解方程</h3><ul><li><p>指令： <code>化数解方程[方程] (变量)</code></p></li><li><p>参数：</p><ul><li><code>方程</code>： 要解的方程，各方程间用 <code>,</code> 隔开</li><li><code>变量</code>： 可选参数，默认 <code>x</code>，各变量间 <code>,</code> 隔开</li></ul></li><li><p>详情：</p><p>同<a href="#%E8%A7%A3%E6%96%B9%E7%A8%8B">解方程</a>，但尽可能将结果化成数</p></li></ul><h3 id="求导" tabindex="-1"><a class="header-anchor" href="#求导" aria-hidden="true">#</a> 求导</h3><ul><li><p>指令： <code>求导[函数] (自变量) (阶数)</code></p></li><li><p>参数：</p><ul><li><code>函数</code>： 需要求导的函数</li><li><code>自变量</code>： 可选参数，默认 <code>x</code></li><li><code>阶数</code>： 求导阶数，范围为0-10，整数</li></ul></li><li><p>详情：</p><p>求导</p></li></ul><h3 id="不定积分" tabindex="-1"><a class="header-anchor" href="#不定积分" aria-hidden="true">#</a> 不定积分</h3><ul><li><p>指令： <code>不定积分[函数] (自变量)</code></p></li><li><p>参数：</p><ul><li><code>函数</code>： 需要积的函数</li><li><code>自变量</code>： 可选参数，默认 <code>x</code></li></ul></li><li><p>详情：</p><p>求不定积分</p></li></ul><h3 id="反函数" tabindex="-1"><a class="header-anchor" href="#反函数" aria-hidden="true">#</a> 反函数</h3><ul><li><p>指令： <code>反函数[函数] (变量)</code></p></li><li><p>参数：</p><ul><li><code>函数</code>： 函数</li><li><code>变量</code>： 可选参数，默认 <code>x</code></li></ul></li><li><p>详情：</p><p>求函数的反函数</p></li></ul><h3 id="latex" tabindex="-1"><a class="header-anchor" href="#latex" aria-hidden="true">#</a> /latex</h3><ul><li><p>指令： <code>/latex[公式]</code></p></li><li><p>参数：</p><ul><li><code>公式</code>： latex 公式</li></ul></li><li><p>详情：</p><p>生成 latex 公式图</p></li></ul><h3 id="alpha" tabindex="-1"><a class="header-anchor" href="#alpha" aria-hidden="true">#</a> /alpha</h3><ul><li><p>指令： <code>/alpha[问题]</code></p></li><li><p>参数：</p><ul><li><code>问题</code>： 数学问题，数学公式，数学相关均可</li></ul></li><li><p>详情：</p><p>问问 wolframalpha</p></li></ul>',30),o=[c];function p(h,r){return l(),i("div",null,o)}const n=e(a,[["render",p],["__file","math.html.vue"]]);export{n as default};
